{
	"info": {
		"_postman_id": "21cbf75e-adcd-40f4-a491-6a8a8b9bbca5",
		"name": "Airlines",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22978293"
	},
	"item": [
		{
			"name": "Create new Airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"idAirline\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function(){",
							"    pm.response.to.have.status(201)",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Koepp - Klein\",\n    \"description\": \"Industrial Mobility Groves\",\n    \"fundationDate\": \"2021-12-01\",\n    \"webPage\": \"http://fantastic-balalaika.net\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new airline fails",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"   pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.error).to.eql(\"Bad Request\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"Industrial Mobility Groves\",\n    \"fundationDate\": \"2022-12-03T08:01:38.741Z\",\n    \"webPage\": \"http://fantastic-balalaika.net\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"idAirline\", data.id);",
							"",
							"pm.test(\"Status code is 200\", function(){",
							"    pm.response.to.have.status(200)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Koepp - Klein\",\n    \"description\": \"Industrial Mobility Groves\",\n    \"fundationDate\": \"2021-12-03T08:01:38.741Z\",\n    \"webPage\": \"http://fantastic-balalaika.net\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines/{{idAirline}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{idAirline}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Airline fails",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"   pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.error).to.eql(\"Bad Request\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": null,\n    \"description\": \"Industrial Mobility Groves\",\n    \"fundationDate\": \"2022-12-03T08:01:38.741Z\",\n    \"webPage\": \"http://fantastic-balalaika.net\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines/{{idAirline}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{idAirline}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Airline that does not exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The Airline with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Koepp - Klein\",\n    \"description\": \"Industrial Mobility Groves\",\n    \"fundationDate\": \"2022-12-03T08:01:38.741Z\",\n    \"webPage\": \"http://fantastic-balalaika.net\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines/{{idAirlineInvalid}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{idAirlineInvalid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Airlines",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of airlines > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an Airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{idAirline}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{idAirline}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an airline that does not exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The Airline with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{idAirlineInvalid}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{idAirlineInvalid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{idAirline}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{idAirline}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Airline that does not exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The Airline with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{idAirlineInvalid}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{idAirlineInvalid}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1"
		},
		{
			"key": "idAirlineInvalid",
			"value": "00000000-0000-0000-0000-000000000000",
			"type": "string"
		}
	]
}